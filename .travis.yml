language: cpp

addons:
  apt:
    packages:
      - libc-bin

sudo: false

matrix:
  include:
     # Linux
     - os: linux
       compiler: clang
       env: NODE_VERSION="0.10.36"
     - os: linux
       compiler: clang
       env: NODE_VERSION="0.10.36" BUILD_ARGS="--debug"
env:
  global:
   - JOBS: "12"
   # commented to test OSRM latest
   - OSRM_RELEASE: "v4.6.0"
   - secure: KitzGZjoDblX/3heajcvssGz0JnJ/k02dr2tu03ksUV+6MogC3RSQudqyKY57+f8VyZrcllN/UOlJ0Q/3iG38Oz8DljC+7RZxtkVmE1SFBoOezKCdhcvWM12G3uqPs7hhrRxuUgIh0C//YXEkulUrqa2H1Aj2xeen4E3FAqEoy0=
   - secure: WLGmxl6VTVWhXGm6X83GYNYzPNsvTD+9usJOKM5YBLAdG7cnOBQBNiCCUKc9OZMMZVUr3ec2/iigakH5Y8Yc+U6AlWKzlORyqWLuk4nFuoedu62x6ocQkTkuOc7mHiYhKd21xTGMYauaZRS6kugv4xkpGES2UjI2T8cjZ+LN2jU=

before_install:
- scripts/validate_tag.sh
- export COVERAGE=${COVERAGE:-false}
- source ./scripts/install_node.sh ${NODE_VERSION}
- if [[ ${COVERAGE} == true ]]; then
    brew install pyenv;
    eval "$(pyenv init -)";
    pyenv install 2.7.6;
    pyenv global 2.7.6;
    pyenv rehash;
    pip install cpp-coveralls;
    pyenv rehash;
  fi;

install:
- source ./bootstrap.sh
- if [[ ${COVERAGE} == true ]]; then
    LDFLAGS="--coverage" CXXFLAGS="--coverage" npm install --build-from-source --debug --clang=1 ${BUILD_ARGS};
  else
    npm install --build-from-source --clang=1 ${BUILD_ARGS};
  fi;

script:
- RESULT=0
# prepare tests
- make berlin-latest.osrm.hsgr
- catchsegv node ./node_modules/.bin/mocha ./test || RESULT=$?
- if [[ ${RESULT} != 0 ]]; then exit $RESULT; fi
- if [[ ${COVERAGE} == true ]]; then cpp-coveralls --exclude node_modules --exclude mason_packages --exclude tests --build-root build --gcov-options '\-lp' --exclude doc --exclude build/Release/obj/gen; fi;
- ./scripts/publish.sh
